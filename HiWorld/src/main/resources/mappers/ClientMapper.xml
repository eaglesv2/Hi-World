<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 매핑될 DAO 인터페이스 풀네임 -->
<mapper namespace="com.hiworld.client.dao.ClientDAO">

	
	<!-- 회원 정보 수정 -->
	<update id="updateClient">
		UPDATE CLIENT SET
		NAME = #{name},
		TEL = #{tel}
		WHERE ID = #{id}
	</update>
	
	<!-- 회원 정보 삭제 -->
	<delete id="deleteClient">
		DELETE FROM CLIENT
		WHERE ID = #{id}
		<!-- ON DELETE CASCADE 연결된 칼럼까지 다 삭제 -->
		<!-- ALTER 를 이용해서 table구조 바꾸기도 가능 -->
	</delete>
	
	
	<!-- 회원 정보 수정 -->
	
	<!--  이름 수정 -->
	<update id="updateName" parameterType="clientVO">
		UPDATE HW_USERLIST SET
		UserName = #{UserName}
		WHERE UserSerial = #{UserSerial}
	</update>
	<!-- 이름 조회  -->
	<select id="selectName" resultType="String">
	SELECT UserName FROM HW_USERLIST
	where UserID = #{UserID}
	</select>
	
	
	<!--  비밀번호 수정 -->
	<update id="updatepw" parameterType="clientVO">
		UPDATE HW_USERLIST SET
		UserPW = #{UserPW}
		WHERE UserPW = #{UserPW}
	</update>
	<!-- 비밀번호 조회  -->
	<select id="selectpw" resultType="clientVO">
	SELECT UserPW FROM HW_USERLIST
	WHERE UserPW = #{UserPW}
	</select>
	
	<!--  생일 수정 -->
	<update id="updateBirth" parameterType="clientVO">
		UPDATE HW_USERLIST SET
		UserBirth = #{UserBirth}
		WHERE UserBirth = #{UserBirth}
	</update>
	<!-- 생일수정 조회  -->
	<select id="selectBirth" resultType="clientVO">
	SELECT UserBirth FORM HW_USERLIST
	WHERE UserBirth = #{UserBirth}
	</select>
	
		<!--  연락처 수정 -->
		<update id="updateTel" parameterType="clientVO">
		UPDATE HW_USERLIST SET
		UserTel = #{UserTel}
		WHERE UserTel = #{UserTel}
	</update>
	<!-- 연락처 조회  -->
	<select id="selectTel" resultType="clientVO">
	SELECT UserTel FORM HW_USERLIST
	WHERE UserTel = #{UserTel}
	</select>
	
	
		<!-- 주소 수정  --> 
	<update id="updateAddress" parameterType="clientVO">
		UPDATE HW_USERLIST SET
		UserAddress = #{UserAddress}
		WHERE UserAddress = #{UserAddress}
	</update>
	<!-- 주소 조회  -->
	<select id="selectAddress" resultType="clientVO">
	SELECT UserAddress FORM HW_USERLIST
	WHERE UserAddress = #{UserAddress}
	</select>
	
	
		
	<!-- 회원 정보 삭제 -->
	<delete id="deleteClient">
		DELETE FROM CLIENT
		WHERE ID = #{id}
		<!-- ON DELETE CASCADE 연결된 칼럼까지 다 삭제 -->
		<!-- ALTER 를 이용해서 table구조 바꾸기도 가능 -->
	</delete>
	
	
	
	<!-- ################################### 구현 완료  -->
	<!-- 회원 회원 가입 -->
	<!-- parameterType 값은 자동으로 설정됨? 아마 아닐경우 직접 써주기 -->
	<insert id="insertClient" parameterType="clientVO">
		INSERT INTO HW_USERLIST (UserName,UserID,UserPW,UserGender,UserBirth ,UserTel,UserAddress)
		VALUES(#{UserName},#{UserID},#{UserPW},#{UserGender},#{UserBirth},#{UserTel},#{UserAddress})
	</insert>
	
	<!-- 회원가입시 미니홈피 기본값 등록 -->
	<insert id="insertMiniHP">
		INSERT INTO MiniHP_UserMenu (UserSerial, UserID)
		VALUES(#{UserSerial},#{UserID})
	</insert>
	
	<!-- 아이디 중복 체크 구현 -->
	<select id="idCheck" resultType="int">
		SELECT count(*) FROM HW_USERLIST
		WHERE UserID=#{UserID}
	</select>
	
	<!-- 네이버 회원 확인 -->
	<select id="NaverCheckClient" resultType="sessionVO">
		SELECT UserSerial, UserID, UserName, UserCash, UserBirth, UserTel, UserAddress, UserGender FROM HW_USERLIST WHERE UserID = #{UserID}
	</select>
	
	<!-- 회원 로그인 확인 -->
	<select id="checkClient" resultType="sessionVO">
		SELECT UserSerial, UserID, UserName, UserCash, UserBirth, UserTel, UserAddress, UserGender FROM HW_USERLIST WHERE UserID = #{UserID} AND UserPW = #{UserPW}
	</select>
	
	<!-- 회원 한명 조회 -->
	<select id="getOneClient" resultType="clientVO">
		<!-- #{id}는 dao를 호출할때 VO값을 넣어서 보내면 VO에 선언된 id값을 get해서 가져옴 -->
		SELECT * FROM HW_USERLIST WHERE UserID = #{UserID}		
	</select>
	
	<!-- 밤톨 충전 -->
	<update id="userCash">
		UPDATE HW_USERLIST 
		SET UserCash = #{UserCash}
		WHERE UserID = #{UserID}
	</update>
	
	<!-- PW확인 -->
	<select id="pwCheck" resultType="String">
		SELECT UserPW FROM HW_USERLIST WHERE UserID= #{UserID}
	</select>
	
	<!-- 회원 전체 조회 -->
	<select id="getAllClient" resultType="clientVO">
		SELECT * FROM HW_USERLIST WHERE UserID != 'ADMIN' AND Ban != 1
	</select>
	
	<!-- 밴한 회원 전체 조회 -->
	<select id="getAllBanClient" resultType="clientVO">
		SELECT * FROM HW_USERLIST WHERE UserID != 'ADMIN' AND Ban = 1
	</select>
	
	<!-- 밴 -->
	<update id="banClient">
		UPDATE HW_USERLIST SET Ban = 1 WHERE UserSerial = #{UserSerial}
	</update>
	
	<!-- 밴 풀기 -->
	<update id="unBanClient">
		UPDATE HW_USERLIST SET Ban = 0 WHERE UserSerial = #{UserSerial}
	</update>
	
	<!-- 로그인시 밴 확인 -->
	<select id="checkBan" resultType="String">
		SELECT Ban FROM HW_USERLIST WHERE UserSerial = #{UserSerial}
	</select>
</mapper>

